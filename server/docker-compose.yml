version: "3"

volumes:

  #codebase_frontend:

  codebase_backend:

services:

  #codebase_frontend_kit:

    #build:

      #context: "./"
      #dockerfile: "Dockerfile-frontend.kit"
      #args:

        #USER: ${USERID}
        #GROUP: ${GROUPID}
        #TZ: ${TZ}

        #NODE_NAME: ${COMPOSE_PROJECT_NAME}
        #NODE_ENV: ${COMPOSE_PROJECT_ENV}

    #image: "codebase_frontend_kit:latest"
    #entrypoint: []
    #command: ["tail", "/dev/null"]

  codebase_backend_kit:

    build:

      context: "./"
      dockerfile: "Dockerfile-backend.kit"
      args:

        USER: ${USERID}
        GROUP: ${GROUPID}
        APP_TIMEZONE: ${TZ}

        APP_NAME: ${COMPOSE_PROJECT_NAME}
        APP_ENV: ${COMPOSE_PROJECT_ENV}

    image: "codebase_backend_kit:latest"
    entrypoint: []
    command: ["tail", "/dev/null"]

  #codebase_frontend:

    #build:

      #context: "./"
      #dockerfile: "Dockerfile-frontend"

    #image: "${COMPOSE_PROJECT_NAME}_frontend:latest"
    #container_name: "${COMPOSE_PROJECT_NAME}_frontend"

    #volumes:

      #- codebase_frontend:/var/www/${COMPOSE_PROJECT_NAME}/

    #restart: always

    #extra_hosts:

      #- "host.docker.internal:host-gateway"

    #expose:

      #- 9000

    #depends_on:

      #- codebase_frontend_kit

    #links:

      #- codebase_backend

  codebase_backend:

    build:

      context: "./"
      dockerfile: "Dockerfile-backend"

    image: "${COMPOSE_PROJECT_NAME}_backend:latest"
    container_name: "${COMPOSE_PROJECT_NAME}_backend"

    volumes:

      - codebase_backend:/var/www/${COMPOSE_PROJECT_NAME}/

    restart: always

    extra_hosts:

      - "host.docker.internal:host-gateway"

    expose:

      - 9000

    #depends_on:

      #- codebase_backend_kit

    #links:

      #- memory
      #- database_mssql
      #- database_mysql
      #- database_postgresql
      #- database_mongonosql
      #- mail

  #server_codebase_frontend:

    #image: nginx:1.25.4-alpine3.18

    #volumes:

      #- /etc/letsencrypt/archive/frontend.test/:/etc/letsencrypt/live/frontend.test/ #
      #- ./storage/server/frontend.conf:/etc/nginx/templates/default.conf.template
      #- codebase_frontend:/var/www/${COMPOSE_PROJECT_NAME}/

    #ports:

      #- ${SERVER_FRONTEND_PORT}:80
      #- ${SERVER_FRONTEND_SECURE_PORT}:443

    #restart: always

    #environment:

      #TZ: ${TZ}

      #NAME: ${COMPOSE_PROJECT_NAME}

    #links:

      #- codebase_frontend

  server_codebase_backend:

    image: nginx:1.25.4-alpine3.18

    volumes:

      # - /etc/letsencrypt/archive/backend.test/:/etc/letsencrypt/live/backend.test/ #
      - ./storage/server/backend.conf:/etc/nginx/templates/default.conf.template
      - codebase_backend:/var/www/${COMPOSE_PROJECT_NAME}/

    ports:

      - ${SERVER_BACKEND_PORT}:80
      - ${SERVER_BACKEND_SECURE_PORT}:443

    restart: always

    environment:

      TZ: ${TZ}

      NAME: ${COMPOSE_PROJECT_NAME}

    links:

      - codebase_backend


